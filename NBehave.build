<?xml version="1.0" ?>
<project name="NBehave" default="test" xmlns="http://nant.sf.net/schemas/nant.xsd">
	<property name="solution.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="test.dir.3.5" value ="${build.dir}\Debug-3.5\UnitTests" />
	<property name="test.dir.4.0" value ="${build.dir}\Debug-4.0\UnitTests" />
	<property name="company.name" value="${project::get-name()}"/>
	<property name="project.fullversion" value="0.6.0.0" dynamic="true" />
	<property name="project.config" value="release" />

	<!-- User targets -->
	<target name="init" description="Initializes build properties">
		<tstamp>
			<formatter property="datetime.buildtime" pattern="yyyy-MM-dd, HH:mm:ss" />
		</tstamp>
		<echo message="Current Directory: ${project::get-base-directory()}"/>
	</target>

	<target name="clean" depends="init" description="Delete automated build artifacts">
		<delete dir="${build.dir}/Debug-3.5" if="${directory::exists(build.dir)}"/>
		<delete dir="${build.dir}/Debug-4.0" if="${directory::exists(build.dir)}"/>
		<delete dir="${build.dir}/dist" if="${directory::exists(build.dir)}"/>
		<delete dir="${build.dir}/test-reports" if="${directory::exists(build.dir)}"/>
	</target>

	<target name="compile" depends="compile-3.5, compile-console-4.0-x86, compile-4.0" />

	<target name="compile-3.5">
		<delete if="${directory::exists(build.dir)}">
			<fileset>
				<include name="${build.dir}/Debug-3.5/NBehave/*.*" />
				<include name="src\**\obj\**\*.*" />
			</fileset>
		</delete>
		<exec program="${environment::get-folder-path('System')}\..\Microsoft.NET\Framework\v4.0.30319\msbuild.exe"
		      commandline="/property:Configuration=AutomatedDebug-3.5 /v:m /p:TargetFrameworkVersion=v3.5 /toolsversion:3.5 src\NBehave.sln" />
		<delete file="${build.dir}/Debug-3.5/NBehave/NBehave-Console.exe.config" />
	</target>

	<target name="compile-4.0" depends="clean-compile-4.0">
		<exec program="${environment::get-folder-path('System')}\..\Microsoft.NET\Framework\v4.0.30319\msbuild.exe"
		      commandline="/property:Configuration=AutomatedDebug-4.0 /v:m /p:TargetFrameworkVersion=v4.0 /toolsversion:4.0 src\NBehave.sln" />
	</target>

	<target name="clean-compile-4.0">
		<exec program="${environment::get-folder-path('System')}\..\Microsoft.NET\Framework\v4.0.30319\msbuild.exe"
		      commandline="/property:Configuration=AutomatedDebug-4.0 /v:m /p:TargetFrameworkVersion=v4.0 /toolsversion:4.0 /t:Clean src\NBehave.sln" />
		<delete if="${directory::exists(build.dir)}">
			<fileset>
				<include name="${build.dir}/Debug-4.0/NBehave/*.dll" />
				<include name="${build.dir}/Debug-4.0/NBehave/*.xml" />
				<include name="${build.dir}/Debug-4.0/NBehave/*.pdb" />
				<include name="src\**\obj\**\*.*" />
			</fileset>
		</delete>
	</target>
	
	<target name="compile-console-4.0-x86">
		<exec program="${environment::get-folder-path('System')}\..\Microsoft.NET\Framework\v4.0.30319\msbuild.exe"
		      commandline="/property:Configuration=AutomatedDebug-4.0-x86 /v:m /p:TargetFrameworkVersion=v4.0;Configuration=AutomatedDebug-4.0-x86;Platform=x86;OutputPath=..\..\build\Debug-4.0\NBehave\ /toolsversion:4.0 /t:Rebuild src\NBehave.Console\NBehave.Console.csproj" />
		<move file="build\Debug-4.0\NBehave\NBehave-Console.exe" tofile="build\Debug-4.0\NBehave\NBehave-Console-x86.exe" overwrite="true" />
	</target>

	<target name="test" depends="compile, run-unit-tests"
	        description="Compile and run tests" />

	<target name="test-3.5" depends="compile-3.5, run-unit-tests-3.5"
	        description="Compile and run tests for .Net 3.5 only" />

	<target name="test-4.0" depends="compile-4.0, run-unit-tests-4.0"
	        description="Compile and run tests for .Net 4.0 only" />

	<target name="test-with-coverage" depends="compile, run-unit-tests-with-coverage"
	        description="Compile and run tests with coverage" />

	<target name="full" depends="clean, commonassemblyinfo, test, dist"
	        description="Compiles, tests, and produces distributions" />

	<target name="version" description="mark AssemblyInfo builds with the build number">
		<if test="${property::exists('build.number')}">
			<property name="project.fullversion" value="${build.number}" />
		</if>
		<echo message="MARKING THIS BUILD AS VERSION ${project.fullversion}" />
	</target>

	<target name="commonassemblyinfo" depends="version, init">
		<delete file="${solution.dir}/CommonAssemblyInfo.cs" failonerror="false"/>
		<asminfo output="${solution.dir}/CommonAssemblyInfo.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
				<import namespace="System.Runtime.InteropServices" />
			</imports>
			<attributes>
				<attribute type="ComVisibleAttribute" value="false" />
				<attribute type="AssemblyVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyFileVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyCopyrightAttribute" value="Copyright © ${company.name} 2007-${datetime::get-year(datetime::now())}" />
				<attribute type="AssemblyProductAttribute" value="${project::get-name()}" />
				<attribute type="AssemblyCompanyAttribute" value="${company.name}" />
				<attribute type="AssemblyConfigurationAttribute" value="${project.config}" />
				<attribute type="AssemblyInformationalVersionAttribute" value="${project.fullversion}" />
			</attributes>
			<references>
				<include name="System.dll" />
			</references>
		</asminfo>
		<copy file="${solution.dir}/CommonAssemblyInfo.cs" todir="${solution.dir}\NBehave.Examples" />
	</target>

	<!-- Internal targets -->
	<target name="run-code-metrics">
		<NDepend NDependConsoleExePath="tools\NDepend\"
		         ProjectFilePath="tools\NDepend\NBehave.NDependProject.xml"
		         Silent="true"/>
	</target>

	<target name="run-unit-tests" depends="run-unit-tests-3.5, run-unit-tests-4.0" /> 

	<target name="run-unit-tests-3.5">
		<mkdir dir="${build.dir}\test-reports" />
		<copy file="${build.dir}\..\lib\MSTest9\Microsoft.VisualStudio.QualityTools.UnitTestFramework.dll" todir="${test.dir.3.5}" />
		<exec program="nunit-console-x86.exe" basedir="tools\nunit" workingdir="${test.dir.3.5}">
			<arg value="NBehave.Narrator.Framework.Specifications.dll" />
			<arg value="NBehave.Console.Specifications.dll" />
			<arg value="NBehave.Spec.NUnit.Specifications.dll" />
			<arg value="NBehave.Spec.MbUnit.Specifications.dll" />
			<arg value="NBehave.Spec.MSTest.Specifications.dll" />
			<arg value="NBehave.Spec.Xunit.Specifications.dll" />
			<arg value="NBehave.Fluent.Framework.Specifications.dll" />
			<arg value="NBehave.NAnt.Specifications.dll" />
			<arg value="NBehave.MSBuild.Specifications.dll" />
			<arg value="NBehave.TestDriven.Plugin.Specifications.dll" />
      <arg value="NBehave.ReSharper.Plugin.Specifications.dll" />
			<arg value="/xml:..\..\test-reports\UnitTests-3.5.xml" />
		</exec>
		<echo message="##teamcity[importData type='nunit' path='${build.dir}\test-reports\UnitTests-3.5.xml']" />
	</target>

	<target name="run-unit-tests-4.0">
		<mkdir dir="${build.dir}\test-reports" />
    <copy file="${build.dir}\..\lib\MSTest10\Microsoft.VisualStudio.QualityTools.UnitTestFramework.dll" todir="${test.dir.4.0}" />

    <exec program="nunit-console-x86.exe" basedir="tools\nunit" workingdir="${test.dir.4.0}">
			<arg value="NBehave.Narrator.Framework.Specifications.dll" />
			<arg value="NBehave.Console.Specifications.dll" />
			<arg value="NBehave.Spec.NUnit.Specifications.dll" />
			<arg value="NBehave.Spec.MbUnit.Specifications.dll" />
			<arg value="NBehave.Spec.MSTest.Specifications.dll" />
			<arg value="NBehave.Spec.Xunit.Specifications.dll" />
			<arg value="NBehave.Fluent.Framework.Specifications.dll" />
			<arg value="NBehave.NAnt.Specifications.dll" />
			<arg value="NBehave.MSBuild.Specifications.dll" />
			<arg value="NBehave.TestDriven.Plugin.Specifications.dll" />
      <arg value="NBehave.ReSharper.Plugin.Specifications.dll" />
      <arg value="/xml:..\..\test-reports\UnitTests-4.0.xml" />
		</exec>
		<echo message="##teamcity[importData type='nunit' path='${build.dir}\test-reports\UnitTests-4.0.xml']" />
	</target>

	<target name="run-unit-tests-with-coverage">
		<mkdir dir="${build.dir}\test-reports" />

		<!-- This runs NUnit through NCover.org version 1.3, giving coverage results.-->
		<exec program="regsvr32" workingdir="tools\NCover" commandline="/s CoverLib.dll" />
		<!--If you don't want to use NCover, delete this 'exec' instance, and use the plain NUnit one below -->
		<exec
			program="tools\NCover\NCover.Console.exe"
			workingdir="${build.dir}\Debug\UnitTests">
			<arg value="..\..\..\tools\nunit\nunit-console.exe" />
      <arg value="NBehave.Narrator.Framework.Specifications.dll" />
      <arg value="NBehave.Console.Specifications.dll" />
      <arg value="NBehave.Spec.NUnit.Specifications.dll" />
      <arg value="NBehave.Spec.MbUnit.Specifications.dll" />
      <arg value="NBehave.Spec.MSTest.Specifications.dll" />
      <arg value="NBehave.Spec.Xunit.Specifications.dll" />
      <arg value="NBehave.Fluent.Framework.Specifications.dll" />
      <arg value="NBehave.NAnt.Specifications.dll" />
      <arg value="NBehave.MSBuild.Specifications.dll" />
      <arg value="NBehave.TestDriven.Plugin.Specifications.dll" />
      <arg value="NBehave.ReSharper.Plugin.Specifications.dll" />
      <arg value="/xml:..\..\test-reports\UnitTests.xml" />
			<arg value="/nologo" />
			<arg value="//w" />
			<arg value="." />
			<arg value="//x" />
			<arg value="..\..\test-reports\Coverage.xml" />
		</exec>

	</target>

	<target name="dist" depends="dist.examples">
		<copy file="${solution.dir}\xsl\NBehaveResults.xsl" todir="${build.dir}\dist\v3.5" />
		<copy file="${solution.dir}\xsl\NBehaveResults.xsl" todir="${build.dir}\dist\v4.0" />
		<zip zipfile="${build.dir}\NBehave_${project.fullversion}.zip">
			<fileset basedir="${build.dir}\dist">
				<include name="**\*" />
				<include name="..\NBehave.Examples.zip" />
			</fileset>
		</zip>

		<exec
			program="tools\nsis\makensis.exe"
			workingdir="src\Installer">
			<arg value="/DVERSION=${project.fullversion}" />
			<arg value="NBehave.nsi" />
		</exec>
		<delete file="${exampleFiles}" if="${file::exists(exampleFiles)}" />
	</target>

	<target name="dist.examples" depends="dist.binaries">
		<property name="examplesdest.dir" value="${build.dir}\Examples" />
		<property name="examplesource.dir" value="${solution.dir}\NBehave.Examples" />
		<property name="references" value="foo;bar" />

		<delete dir="${examplesdest.dir}" if="${directory::exists(examplesdest.dir)}"/>
		<mkdir dir="${examplesdest.dir}" />
		<copy todir="${examplesdest.dir}">
			<fileset basedir="${examplesource.dir}">
				<include name="**\*.*"/>        
				<exclude name="**\bin\**\*.*" />
				<exclude name="**\obj\**\*.*" />
				<exclude name="**\_svn\**\*.*" />
				<exclude name="**\.svn\**\*.*" />
			</fileset>
		</copy>
		<copy todir="${examplesdest.dir}\lib">
			<fileset basedir="${build.dir}\dist">
				<include name="NBehave*.*" />
				<include name="nunit.framework.dll" />
			</fileset>
		</copy>
		<copy todir="${examplesdest.dir}\lib" flatten="true" file="tools\nant\tasks\net\NAnt.Contrib.Tasks.dll" />

		<xmllist file="${examplesdest.dir}\NBehave.Examples.csproj"
		         property="references" delim=";"
		         xpath="//xsi:Reference/xsi:HintPath/../@Include">
			<namespaces>
				<namespace prefix="xsi" uri="http://schemas.microsoft.com/developer/msbuild/2003" />
			</namespaces>
		</xmllist>

		<foreach item="String" in="${references}" delim=";" property="reference">
			<xmlpeek
				file="${examplesdest.dir}\NBehave.Examples.csproj"
				property="pathtoreference"
				xpath="//xsi:Reference[@Include='${reference}']/xsi:HintPath">
				<namespaces>
					<namespace prefix="xsi" uri="http://schemas.microsoft.com/developer/msbuild/2003" />
				</namespaces>
			</xmlpeek>
			<regex input="${pathtoreference}" pattern="(?'dllfile'(\w+\.)+dll$)" />
			<xmlpoke
				file="${examplesdest.dir}\NBehave.Examples.csproj"
				value="lib\${dllfile}"
				xpath="//xsi:Reference[@Include='${reference}']/xsi:HintPath">
				<namespaces>
					<namespace prefix="xsi" uri="http://schemas.microsoft.com/developer/msbuild/2003" />
				</namespaces>
			</xmlpoke>
		</foreach>

		<property name="exampleFiles" value="${build.dir}\NBehave.Examples.zip" />
		<zip zipfile="${exampleFiles}">
			<fileset basedir="${examplesdest.dir}">
				<exclude name="**\bin\**\*.*" />
				<exclude name="**\obj\**\*.*" />
				<include name="**\*.scenario" />
				<include name="**\*.feature" />
				<include name="**\*.story" />
				<include name="**\*.cs" />
				<include name="**\*.csproj" />
				<include name="**\*.msbuild" />
				<include name="**\*.build" />
				<include name="lib\**\*.*"/>
			</fileset>
		</zip>
	</target>

	<target name="dist.binaries" depends="dist.vsplugin">
		<copy todir="${build.dir}\dist\v3.5">
			<fileset basedir="${build.dir}\Debug-3.5\NBehave">
				<include name="**\NBehave*"/>
				<exclude name="**\*.pdb" />
				<include name="nunit.framework.dll" />
				<include name="Gallio.dll" />
				<include name="MbUnit.dll" />
				<include name="nunit.framework.dll" />
				<include name="Rhino.Mocks.dll" />
				<include name="xunit.dll" />
			</fileset>
		</copy>
		<copy todir="${build.dir}\dist\v4.0">
			<fileset basedir="${build.dir}\Debug-4.0\NBehave">
				<include name="**\NBehave*"/>
				<exclude name="**\*.pdb" />
				<include name="nunit.framework.dll" />
				<include name="Gallio.dll" />
				<include name="MbUnit.dll" />
				<include name="nunit.framework.dll" />
				<include name="Rhino.Mocks.dll" />
				<include name="xunit.dll" />
			</fileset>
		</copy>
	</target>

	<target name="dist.vsplugin">
		<copy todir="${build.dir}\plugin">
			<fileset basedir="${build.dir}\Debug-4.0\VSPlugin">
				<include name="**\NBehave*"/>
				<exclude name="**\*.pdb" />
				<exclude name="**\*.vsix" />
				<include name="extension.vsixmanifest" />
			</fileset>
		</copy>
		<xmlpoke
			file="${build.dir}\plugin\extension.vsixmanifest"
			value="true"
			xpath="/vsx:Vsix/vsx:Identifier/vsx:InstalledByMsi">
			<namespaces>
				<namespace prefix="vsx" uri="http://schemas.microsoft.com/developer/vsx-schema/2010" />
			</namespaces>
		</xmlpoke>
		<xmlpoke
			file="${build.dir}\plugin\extension.vsixmanifest"
			value="${project.fullversion}"
			xpath="/vsx:Vsix/vsx:Identifier/vsx:Version">
			<namespaces>
				<namespace prefix="vsx" uri="http://schemas.microsoft.com/developer/vsx-schema/2010" />
			</namespaces>
		</xmlpoke>
	</target>

</project>


